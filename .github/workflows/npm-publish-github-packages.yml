name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  # test:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Set up Node.js
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: '18' # Ensure this matches your project's Node.js version

  #     - name: Install Dependencies
  #       run: npm ci
  #     # Adjust this based on your observation of how long Netlify Dev takes to initialize

  #     - name: Cypress run
  #       uses: cypress-io/github-action@v5
  #       with:
  #         browser: chrome
  #         start: npx netlify dev
  #         wait-on: 'http://localhost:8888'
  #         wait-on-timeout: 60 # Adjust if necessary
  #     # after the test run completes
  #     # store videos and any screenshots
  #     # NOTE: screenshots will be generated only if E2E test failed
  #     # thus we store screenshots only on failures
  #     # Alternative: create and commit an empty cypress/screenshots folder
  #     # to always have something to upload
  #     - uses: actions/upload-artifact@v3
  #       if: failure()
  #       with:
  #         name: cypress-screenshots
  #         path: cypress/screenshots
  #     # Test run video was always captured, so this action uses "always()" condition
  #     - uses: actions/upload-artifact@v3
  #       if: always()
  #       with:
  #         name: cypress-videos
  #         path: cypress/videos

  deploy-to-netlify:
    # needs: test # This job runs only if build-and-test succeeds
    runs-on: ubuntu-latest
    environment: Netlify
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18' # Make sure this matches the version used in the build-and-test job

      - name: Install Dependencies
        run: npm ci

      - name: Build for Production
        run: npm run build # Rebuild the site for production before deploying

      - name: Netlify Deploy
        uses: nwtgck/actions-netlify@v2.0

        with:
          publish-dir: './dist' # Adjust based on your build output directory
          production-deploy: true
          github-token: ${{ secrets.ACCESS_TOKEN_GITHUB }}
          deploy-message: 'Deploying to Netlify'
          netlify-auth-token: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          netlify-site-id: ${{ secrets.NETLIFY_SITE_ID }}
